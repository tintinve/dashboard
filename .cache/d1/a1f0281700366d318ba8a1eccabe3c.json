{"id":"node_modules/chart.js/src/core/core.scaleService.js","dependencies":[{"name":"/Users/pedro/Documents/repository/dashboard/package.json","includedInParent":true,"mtime":1538079405693},{"name":"/Users/pedro/Documents/repository/dashboard/node_modules/chart.js/package.json","includedInParent":true,"mtime":1538079405671},{"name":"./core.defaults","loc":{"line":3,"column":23},"parent":"/Users/pedro/Documents/repository/dashboard/node_modules/chart.js/src/core/core.scaleService.js","resolved":"/Users/pedro/Documents/repository/dashboard/node_modules/chart.js/src/core/core.defaults.js"},{"name":"../helpers/index","loc":{"line":4,"column":22},"parent":"/Users/pedro/Documents/repository/dashboard/node_modules/chart.js/src/core/core.scaleService.js","resolved":"/Users/pedro/Documents/repository/dashboard/node_modules/chart.js/src/helpers/index.js"},{"name":"./core.layouts","loc":{"line":5,"column":22},"parent":"/Users/pedro/Documents/repository/dashboard/node_modules/chart.js/src/core/core.scaleService.js","resolved":"/Users/pedro/Documents/repository/dashboard/node_modules/chart.js/src/core/core.layouts.js"}],"generated":{"js":"'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n","map":{"mappings":[{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/chart.js/src/core/core.scaleService.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}}],"sources":{"node_modules/chart.js/src/core/core.scaleService.js":"'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n"},"lineCount":47}},"hash":"829fb362d0c2e63687149f23f98063be","cacheData":{"env":{}}}