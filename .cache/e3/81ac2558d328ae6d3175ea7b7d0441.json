{"id":"node_modules/color-convert/index.js","dependencies":[{"name":"/Users/pedro/Documents/repository/dashboard/package.json","includedInParent":true,"mtime":1538079405693},{"name":"/Users/pedro/Documents/repository/dashboard/node_modules/color-convert/package.json","includedInParent":true,"mtime":1538079405671},{"name":"./conversions","loc":{"line":1,"column":26},"parent":"/Users/pedro/Documents/repository/dashboard/node_modules/color-convert/index.js","resolved":"/Users/pedro/Documents/repository/dashboard/node_modules/color-convert/conversions.js"}],"generated":{"js":"var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","map":{"mappings":[{"source":"node_modules/color-convert/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/color-convert/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}}],"sources":{"node_modules/color-convert/index.js":"var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;"},"lineCount":92}},"hash":"aa40bc5ce6e3e8f89a9cfd1e982e560a","cacheData":{"env":{}}}