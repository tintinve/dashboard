{"id":"node_modules/chart.js/src/scales/scale.category.js","dependencies":[{"name":"/Users/pedro/Documents/repository/dashboard/package.json","includedInParent":true,"mtime":1538079405693},{"name":"/Users/pedro/Documents/repository/dashboard/node_modules/chart.js/package.json","includedInParent":true,"mtime":1538079405671}],"generated":{"js":"'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n","map":{"mappings":[{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.category.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}}],"sources":{"node_modules/chart.js/src/scales/scale.category.js":"'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n"},"lineCount":134}},"hash":"5045b6f427f5cb165c99706fbe86c07e","cacheData":{"env":{}}}