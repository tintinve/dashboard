{"id":"node_modules/chart.js/src/core/core.ticks.js","dependencies":[{"name":"/Users/pedro/Documents/repository/dashboard/package.json","includedInParent":true,"mtime":1538079405693},{"name":"/Users/pedro/Documents/repository/dashboard/node_modules/chart.js/package.json","includedInParent":true,"mtime":1538079405671},{"name":"../helpers/index","loc":{"line":3,"column":22},"parent":"/Users/pedro/Documents/repository/dashboard/node_modules/chart.js/src/core/core.ticks.js","resolved":"/Users/pedro/Documents/repository/dashboard/node_modules/chart.js/src/helpers/index.js"}],"generated":{"js":"'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n","map":{"mappings":[{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/chart.js/src/core/core.ticks.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}}],"sources":{"node_modules/chart.js/src/core/core.ticks.js":"'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n"},"lineCount":71}},"hash":"401c9a09fdbd682dce891809b6ce918c","cacheData":{"env":{}}}