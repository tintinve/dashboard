{"id":"node_modules/chart.js/src/scales/scale.linearbase.js","dependencies":[{"name":"/Users/pedro/Documents/repository/dashboard/package.json","includedInParent":true,"mtime":1538079405693},{"name":"/Users/pedro/Documents/repository/dashboard/node_modules/chart.js/package.json","includedInParent":true,"mtime":1538079405671},{"name":"../helpers/index","loc":{"line":3,"column":22},"parent":"/Users/pedro/Documents/repository/dashboard/node_modules/chart.js/src/scales/scale.linearbase.js","resolved":"/Users/pedro/Documents/repository/dashboard/node_modules/chart.js/src/helpers/index.js"}],"generated":{"js":"'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","map":{"mappings":[{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/chart.js/src/scales/scale.linearbase.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}}],"sources":{"node_modules/chart.js/src/scales/scale.linearbase.js":"'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n"},"lineCount":187}},"hash":"6dacbaa32581f2570333a42b40fb4b20","cacheData":{"env":{}}}